// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: eval/evaluator.proto

package eval

import (
	ast "github.com/Jumpaku/eyamlate/golang/pb/ast"
	yaml "github.com/Jumpaku/eyamlate/golang/pb/yaml"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FunDefList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent *FunDefList `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Def    *ast.FunDef `protobuf:"bytes,2,opt,name=def,proto3" json:"def,omitempty"`
}

func (x *FunDefList) Reset() {
	*x = FunDefList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunDefList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunDefList) ProtoMessage() {}

func (x *FunDefList) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunDefList.ProtoReflect.Descriptor instead.
func (*FunDefList) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{0}
}

func (x *FunDefList) GetParent() *FunDefList {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *FunDefList) GetDef() *ast.FunDef {
	if x != nil {
		return x.Def
	}
	return nil
}

type EvaluateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Defs *FunDefList `protobuf:"bytes,1,opt,name=defs,proto3" json:"defs,omitempty"`
	Eval *ast.Eval   `protobuf:"bytes,2,opt,name=eval,proto3" json:"eval,omitempty"`
}

func (x *EvaluateInput) Reset() {
	*x = EvaluateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateInput) ProtoMessage() {}

func (x *EvaluateInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateInput.ProtoReflect.Descriptor instead.
func (*EvaluateInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{1}
}

func (x *EvaluateInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

func (x *EvaluateInput) GetEval() *ast.Eval {
	if x != nil {
		return x.Eval
	}
	return nil
}

type EvaluateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *yaml.Value `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EvaluateOutput) Reset() {
	*x = EvaluateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateOutput) ProtoMessage() {}

func (x *EvaluateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateOutput.ProtoReflect.Descriptor instead.
func (*EvaluateOutput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{2}
}

func (x *EvaluateOutput) GetValue() *yaml.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type EvaluateExprInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expr *ast.Expr   `protobuf:"bytes,1,opt,name=expr,proto3" json:"expr,omitempty"`
	Defs *FunDefList `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
}

func (x *EvaluateExprInput) Reset() {
	*x = EvaluateExprInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateExprInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateExprInput) ProtoMessage() {}

func (x *EvaluateExprInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateExprInput.ProtoReflect.Descriptor instead.
func (*EvaluateExprInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{3}
}

func (x *EvaluateExprInput) GetExpr() *ast.Expr {
	if x != nil {
		return x.Expr
	}
	return nil
}

func (x *EvaluateExprInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

type EvaluateEvalInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eval *ast.Eval   `protobuf:"bytes,1,opt,name=eval,proto3" json:"eval,omitempty"`
	Defs *FunDefList `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
}

func (x *EvaluateEvalInput) Reset() {
	*x = EvaluateEvalInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateEvalInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateEvalInput) ProtoMessage() {}

func (x *EvaluateEvalInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateEvalInput.ProtoReflect.Descriptor instead.
func (*EvaluateEvalInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{4}
}

func (x *EvaluateEvalInput) GetEval() *ast.Eval {
	if x != nil {
		return x.Eval
	}
	return nil
}

func (x *EvaluateEvalInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

type EvaluateScalarInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scalar *ast.Scalar `protobuf:"bytes,1,opt,name=scalar,proto3" json:"scalar,omitempty"`
	Defs   *FunDefList `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
}

func (x *EvaluateScalarInput) Reset() {
	*x = EvaluateScalarInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateScalarInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateScalarInput) ProtoMessage() {}

func (x *EvaluateScalarInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateScalarInput.ProtoReflect.Descriptor instead.
func (*EvaluateScalarInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{5}
}

func (x *EvaluateScalarInput) GetScalar() *ast.Scalar {
	if x != nil {
		return x.Scalar
	}
	return nil
}

func (x *EvaluateScalarInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

type EvaluateNewObjInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewObj *ast.NewObj `protobuf:"bytes,1,opt,name=new_obj,json=newObj,proto3" json:"new_obj,omitempty"`
	Defs   *FunDefList `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
}

func (x *EvaluateNewObjInput) Reset() {
	*x = EvaluateNewObjInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateNewObjInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateNewObjInput) ProtoMessage() {}

func (x *EvaluateNewObjInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateNewObjInput.ProtoReflect.Descriptor instead.
func (*EvaluateNewObjInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{6}
}

func (x *EvaluateNewObjInput) GetNewObj() *ast.NewObj {
	if x != nil {
		return x.NewObj
	}
	return nil
}

func (x *EvaluateNewObjInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

type EvaluateNewArrInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewArr *ast.NewArr `protobuf:"bytes,1,opt,name=new_arr,json=newArr,proto3" json:"new_arr,omitempty"`
	Defs   *FunDefList `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
}

func (x *EvaluateNewArrInput) Reset() {
	*x = EvaluateNewArrInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateNewArrInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateNewArrInput) ProtoMessage() {}

func (x *EvaluateNewArrInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateNewArrInput.ProtoReflect.Descriptor instead.
func (*EvaluateNewArrInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{7}
}

func (x *EvaluateNewArrInput) GetNewArr() *ast.NewArr {
	if x != nil {
		return x.NewArr
	}
	return nil
}

func (x *EvaluateNewArrInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

type EvaluateValJsonInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValJson *ast.ValJson `protobuf:"bytes,1,opt,name=val_json,json=valJson,proto3" json:"val_json,omitempty"`
	Defs    *FunDefList  `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
}

func (x *EvaluateValJsonInput) Reset() {
	*x = EvaluateValJsonInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateValJsonInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateValJsonInput) ProtoMessage() {}

func (x *EvaluateValJsonInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateValJsonInput.ProtoReflect.Descriptor instead.
func (*EvaluateValJsonInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{8}
}

func (x *EvaluateValJsonInput) GetValJson() *ast.ValJson {
	if x != nil {
		return x.ValJson
	}
	return nil
}

func (x *EvaluateValJsonInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

type EvaluateRangeIterInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RangeIter *ast.RangeIter `protobuf:"bytes,1,opt,name=range_iter,json=rangeIter,proto3" json:"range_iter,omitempty"`
	Defs      *FunDefList    `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
}

func (x *EvaluateRangeIterInput) Reset() {
	*x = EvaluateRangeIterInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateRangeIterInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateRangeIterInput) ProtoMessage() {}

func (x *EvaluateRangeIterInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateRangeIterInput.ProtoReflect.Descriptor instead.
func (*EvaluateRangeIterInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{9}
}

func (x *EvaluateRangeIterInput) GetRangeIter() *ast.RangeIter {
	if x != nil {
		return x.RangeIter
	}
	return nil
}

func (x *EvaluateRangeIterInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

type EvaluateElemAccessInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ElemAccess *ast.ElemAccess `protobuf:"bytes,1,opt,name=elem_access,json=elemAccess,proto3" json:"elem_access,omitempty"`
	Defs       *FunDefList     `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
}

func (x *EvaluateElemAccessInput) Reset() {
	*x = EvaluateElemAccessInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateElemAccessInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateElemAccessInput) ProtoMessage() {}

func (x *EvaluateElemAccessInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateElemAccessInput.ProtoReflect.Descriptor instead.
func (*EvaluateElemAccessInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{10}
}

func (x *EvaluateElemAccessInput) GetElemAccess() *ast.ElemAccess {
	if x != nil {
		return x.ElemAccess
	}
	return nil
}

func (x *EvaluateElemAccessInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

type EvaluateFunCallInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FunCall *ast.FunCall `protobuf:"bytes,1,opt,name=fun_call,json=funCall,proto3" json:"fun_call,omitempty"`
	Defs    *FunDefList  `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
}

func (x *EvaluateFunCallInput) Reset() {
	*x = EvaluateFunCallInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateFunCallInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateFunCallInput) ProtoMessage() {}

func (x *EvaluateFunCallInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateFunCallInput.ProtoReflect.Descriptor instead.
func (*EvaluateFunCallInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{11}
}

func (x *EvaluateFunCallInput) GetFunCall() *ast.FunCall {
	if x != nil {
		return x.FunCall
	}
	return nil
}

func (x *EvaluateFunCallInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

type EvaluateCaseBranchesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaseBranches *ast.CaseBranches `protobuf:"bytes,1,opt,name=case_branches,json=caseBranches,proto3" json:"case_branches,omitempty"`
	Defs         *FunDefList       `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
}

func (x *EvaluateCaseBranchesInput) Reset() {
	*x = EvaluateCaseBranchesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateCaseBranchesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateCaseBranchesInput) ProtoMessage() {}

func (x *EvaluateCaseBranchesInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateCaseBranchesInput.ProtoReflect.Descriptor instead.
func (*EvaluateCaseBranchesInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{12}
}

func (x *EvaluateCaseBranchesInput) GetCaseBranches() *ast.CaseBranches {
	if x != nil {
		return x.CaseBranches
	}
	return nil
}

func (x *EvaluateCaseBranchesInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

type EvaluateOpUnaryInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpUnary *ast.OpUnary `protobuf:"bytes,1,opt,name=op_unary,json=opUnary,proto3" json:"op_unary,omitempty"`
	Defs    *FunDefList  `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
}

func (x *EvaluateOpUnaryInput) Reset() {
	*x = EvaluateOpUnaryInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateOpUnaryInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateOpUnaryInput) ProtoMessage() {}

func (x *EvaluateOpUnaryInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateOpUnaryInput.ProtoReflect.Descriptor instead.
func (*EvaluateOpUnaryInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{13}
}

func (x *EvaluateOpUnaryInput) GetOpUnary() *ast.OpUnary {
	if x != nil {
		return x.OpUnary
	}
	return nil
}

func (x *EvaluateOpUnaryInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

type EvaluateOpBinaryInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpBinary *ast.OpBinary `protobuf:"bytes,1,opt,name=op_binary,json=opBinary,proto3" json:"op_binary,omitempty"`
	Defs     *FunDefList   `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
}

func (x *EvaluateOpBinaryInput) Reset() {
	*x = EvaluateOpBinaryInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateOpBinaryInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateOpBinaryInput) ProtoMessage() {}

func (x *EvaluateOpBinaryInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateOpBinaryInput.ProtoReflect.Descriptor instead.
func (*EvaluateOpBinaryInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{14}
}

func (x *EvaluateOpBinaryInput) GetOpBinary() *ast.OpBinary {
	if x != nil {
		return x.OpBinary
	}
	return nil
}

func (x *EvaluateOpBinaryInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

type EvaluateOpVariadicInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpVariadic *ast.OpVariadic `protobuf:"bytes,1,opt,name=op_variadic,json=opVariadic,proto3" json:"op_variadic,omitempty"`
	Defs       *FunDefList     `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
}

func (x *EvaluateOpVariadicInput) Reset() {
	*x = EvaluateOpVariadicInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateOpVariadicInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateOpVariadicInput) ProtoMessage() {}

func (x *EvaluateOpVariadicInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateOpVariadicInput.ProtoReflect.Descriptor instead.
func (*EvaluateOpVariadicInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{15}
}

func (x *EvaluateOpVariadicInput) GetOpVariadic() *ast.OpVariadic {
	if x != nil {
		return x.OpVariadic
	}
	return nil
}

func (x *EvaluateOpVariadicInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

var File_eval_evaluator_proto protoreflect.FileDescriptor

var file_eval_evaluator_proto_rawDesc = []byte{
	0x0a, 0x14, 0x65, 0x76, 0x61, 0x6c, 0x2f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x65, 0x76, 0x61, 0x6c, 0x1a, 0x10, 0x61, 0x73,
	0x74, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10,
	0x79, 0x61, 0x6d, 0x6c, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x55, 0x0a, 0x0a, 0x46, 0x75, 0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x03, 0x64, 0x65, 0x66, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x44,
	0x65, 0x66, 0x52, 0x03, 0x64, 0x65, 0x66, 0x22, 0x54, 0x0a, 0x0d, 0x45, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75,
	0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x65, 0x66, 0x73, 0x12, 0x1d,
	0x0a, 0x04, 0x65, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61,
	0x73, 0x74, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x52, 0x04, 0x65, 0x76, 0x61, 0x6c, 0x22, 0x33, 0x0a,
	0x0e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x21, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x79, 0x61, 0x6d, 0x6c, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x58, 0x0a, 0x11, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x70, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x04, 0x65, 0x78, 0x70, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x72,
	0x52, 0x04, 0x65, 0x78, 0x70, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x44,
	0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x65, 0x66, 0x73, 0x22, 0x58, 0x0a, 0x11,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x45, 0x76, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x1d, 0x0a, 0x04, 0x65, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x52, 0x04, 0x65, 0x76, 0x61, 0x6c,
	0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x04, 0x64, 0x65, 0x66, 0x73, 0x22, 0x60, 0x0a, 0x13, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a,
	0x06, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x61, 0x73, 0x74, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x52, 0x06, 0x73, 0x63, 0x61, 0x6c,
	0x61, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x04, 0x64, 0x65, 0x66, 0x73, 0x22, 0x61, 0x0a, 0x13, 0x45, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x24, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x6f, 0x62, 0x6a, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x52, 0x06, 0x6e,
	0x65, 0x77, 0x4f, 0x62, 0x6a, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x44, 0x65,
	0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x65, 0x66, 0x73, 0x22, 0x61, 0x0a, 0x13, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x41, 0x72, 0x72, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x72, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x41, 0x72, 0x72,
	0x52, 0x06, 0x6e, 0x65, 0x77, 0x41, 0x72, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75,
	0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x65, 0x66, 0x73, 0x22, 0x65,
	0x0a, 0x14, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x4a, 0x73, 0x6f,
	0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x5f, 0x6a, 0x73,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x56,
	0x61, 0x6c, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x61, 0x6c, 0x4a, 0x73, 0x6f, 0x6e, 0x12,
	0x24, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x04, 0x64, 0x65, 0x66, 0x73, 0x22, 0x6d, 0x0a, 0x16, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x2d, 0x0a, 0x0a, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x49,
	0x74, 0x65, 0x72, 0x52, 0x09, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x72, 0x12, 0x24,
	0x0a, 0x04, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65,
	0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04,
	0x64, 0x65, 0x66, 0x73, 0x22, 0x71, 0x0a, 0x17, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65,
	0x45, 0x6c, 0x65, 0x6d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x30, 0x0a, 0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x0a, 0x65, 0x6c, 0x65, 0x6d, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x04, 0x64, 0x65, 0x66, 0x73, 0x22, 0x65, 0x0a, 0x14, 0x45, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x65, 0x46, 0x75, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x27, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x07, 0x66, 0x75, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75,
	0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x65, 0x66, 0x73, 0x22, 0x79,
	0x0a, 0x19, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x43, 0x61, 0x73, 0x65, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x63,
	0x61, 0x73, 0x65, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x0c, 0x63, 0x61, 0x73, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x44, 0x65, 0x66, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x65, 0x66, 0x73, 0x22, 0x65, 0x0a, 0x14, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x27, 0x0a, 0x08, 0x6f, 0x70, 0x5f, 0x75, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x55, 0x6e, 0x61, 0x72,
	0x79, 0x52, 0x07, 0x6f, 0x70, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65,
	0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e,
	0x46, 0x75, 0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x65, 0x66, 0x73,
	0x22, 0x69, 0x0a, 0x15, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x42, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x09, 0x6f, 0x70, 0x5f,
	0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61,
	0x73, 0x74, 0x2e, 0x4f, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x08, 0x6f, 0x70, 0x42,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x44, 0x65,
	0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x65, 0x66, 0x73, 0x22, 0x71, 0x0a, 0x17, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x56, 0x61, 0x72, 0x69, 0x61, 0x64, 0x69,
	0x63, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x30, 0x0a, 0x0b, 0x6f, 0x70, 0x5f, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x64, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x73,
	0x74, 0x2e, 0x4f, 0x70, 0x56, 0x61, 0x72, 0x69, 0x61, 0x64, 0x69, 0x63, 0x52, 0x0a, 0x6f, 0x70,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x64, 0x69, 0x63, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75,
	0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x65, 0x66, 0x73, 0x32, 0xe9,
	0x07, 0x0a, 0x09, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x37, 0x0a, 0x08,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e,
	0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0c, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x70, 0x72, 0x12, 0x17, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14,
	0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0c, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x65, 0x45, 0x76, 0x61, 0x6c, 0x12, 0x17, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x45, 0x76, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x14, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0e, 0x45, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x12, 0x19, 0x2e, 0x65, 0x76, 0x61, 0x6c,
	0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0e,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x12, 0x19,
	0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4e, 0x65,
	0x77, 0x4f, 0x62, 0x6a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x76, 0x61, 0x6c,
	0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x0e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77,
	0x41, 0x72, 0x72, 0x12, 0x19, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x41, 0x72, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14,
	0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0f, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x65, 0x56, 0x61, 0x6c, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x65, 0x76, 0x61, 0x6c,
	0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x4a, 0x73, 0x6f, 0x6e,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x49, 0x0a,
	0x11, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74,
	0x65, 0x72, 0x12, 0x1c, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x14, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x12, 0x45, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1d,
	0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x45, 0x6c,
	0x65, 0x6d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e,
	0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0f, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x65, 0x46, 0x75, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x1a, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x46, 0x75, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x14,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x43, 0x61, 0x73, 0x65, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x65, 0x43, 0x61, 0x73, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x45, 0x0a,
	0x0f, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x55, 0x6e, 0x61, 0x72, 0x79,
	0x12, 0x1a, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65,
	0x4f, 0x70, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x65,
	0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x10, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65,
	0x4f, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x1b, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x4b, 0x0a,
	0x12, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x64, 0x69, 0x63, 0x12, 0x1d, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x65, 0x4f, 0x70, 0x56, 0x61, 0x72, 0x69, 0x61, 0x64, 0x69, 0x63, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4a, 0x75, 0x6d, 0x70, 0x61, 0x6b, 0x75,
	0x2f, 0x65, 0x79, 0x61, 0x6d, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67,
	0x2f, 0x70, 0x62, 0x2f, 0x65, 0x76, 0x61, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eval_evaluator_proto_rawDescOnce sync.Once
	file_eval_evaluator_proto_rawDescData = file_eval_evaluator_proto_rawDesc
)

func file_eval_evaluator_proto_rawDescGZIP() []byte {
	file_eval_evaluator_proto_rawDescOnce.Do(func() {
		file_eval_evaluator_proto_rawDescData = protoimpl.X.CompressGZIP(file_eval_evaluator_proto_rawDescData)
	})
	return file_eval_evaluator_proto_rawDescData
}

var file_eval_evaluator_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_eval_evaluator_proto_goTypes = []any{
	(*FunDefList)(nil),                // 0: eval.FunDefList
	(*EvaluateInput)(nil),             // 1: eval.EvaluateInput
	(*EvaluateOutput)(nil),            // 2: eval.EvaluateOutput
	(*EvaluateExprInput)(nil),         // 3: eval.EvaluateExprInput
	(*EvaluateEvalInput)(nil),         // 4: eval.EvaluateEvalInput
	(*EvaluateScalarInput)(nil),       // 5: eval.EvaluateScalarInput
	(*EvaluateNewObjInput)(nil),       // 6: eval.EvaluateNewObjInput
	(*EvaluateNewArrInput)(nil),       // 7: eval.EvaluateNewArrInput
	(*EvaluateValJsonInput)(nil),      // 8: eval.EvaluateValJsonInput
	(*EvaluateRangeIterInput)(nil),    // 9: eval.EvaluateRangeIterInput
	(*EvaluateElemAccessInput)(nil),   // 10: eval.EvaluateElemAccessInput
	(*EvaluateFunCallInput)(nil),      // 11: eval.EvaluateFunCallInput
	(*EvaluateCaseBranchesInput)(nil), // 12: eval.EvaluateCaseBranchesInput
	(*EvaluateOpUnaryInput)(nil),      // 13: eval.EvaluateOpUnaryInput
	(*EvaluateOpBinaryInput)(nil),     // 14: eval.EvaluateOpBinaryInput
	(*EvaluateOpVariadicInput)(nil),   // 15: eval.EvaluateOpVariadicInput
	(*ast.FunDef)(nil),                // 16: ast.FunDef
	(*ast.Eval)(nil),                  // 17: ast.Eval
	(*yaml.Value)(nil),                // 18: yaml.Value
	(*ast.Expr)(nil),                  // 19: ast.Expr
	(*ast.Scalar)(nil),                // 20: ast.Scalar
	(*ast.NewObj)(nil),                // 21: ast.NewObj
	(*ast.NewArr)(nil),                // 22: ast.NewArr
	(*ast.ValJson)(nil),               // 23: ast.ValJson
	(*ast.RangeIter)(nil),             // 24: ast.RangeIter
	(*ast.ElemAccess)(nil),            // 25: ast.ElemAccess
	(*ast.FunCall)(nil),               // 26: ast.FunCall
	(*ast.CaseBranches)(nil),          // 27: ast.CaseBranches
	(*ast.OpUnary)(nil),               // 28: ast.OpUnary
	(*ast.OpBinary)(nil),              // 29: ast.OpBinary
	(*ast.OpVariadic)(nil),            // 30: ast.OpVariadic
}
var file_eval_evaluator_proto_depIdxs = []int32{
	0,  // 0: eval.FunDefList.parent:type_name -> eval.FunDefList
	16, // 1: eval.FunDefList.def:type_name -> ast.FunDef
	0,  // 2: eval.EvaluateInput.defs:type_name -> eval.FunDefList
	17, // 3: eval.EvaluateInput.eval:type_name -> ast.Eval
	18, // 4: eval.EvaluateOutput.value:type_name -> yaml.Value
	19, // 5: eval.EvaluateExprInput.expr:type_name -> ast.Expr
	0,  // 6: eval.EvaluateExprInput.defs:type_name -> eval.FunDefList
	17, // 7: eval.EvaluateEvalInput.eval:type_name -> ast.Eval
	0,  // 8: eval.EvaluateEvalInput.defs:type_name -> eval.FunDefList
	20, // 9: eval.EvaluateScalarInput.scalar:type_name -> ast.Scalar
	0,  // 10: eval.EvaluateScalarInput.defs:type_name -> eval.FunDefList
	21, // 11: eval.EvaluateNewObjInput.new_obj:type_name -> ast.NewObj
	0,  // 12: eval.EvaluateNewObjInput.defs:type_name -> eval.FunDefList
	22, // 13: eval.EvaluateNewArrInput.new_arr:type_name -> ast.NewArr
	0,  // 14: eval.EvaluateNewArrInput.defs:type_name -> eval.FunDefList
	23, // 15: eval.EvaluateValJsonInput.val_json:type_name -> ast.ValJson
	0,  // 16: eval.EvaluateValJsonInput.defs:type_name -> eval.FunDefList
	24, // 17: eval.EvaluateRangeIterInput.range_iter:type_name -> ast.RangeIter
	0,  // 18: eval.EvaluateRangeIterInput.defs:type_name -> eval.FunDefList
	25, // 19: eval.EvaluateElemAccessInput.elem_access:type_name -> ast.ElemAccess
	0,  // 20: eval.EvaluateElemAccessInput.defs:type_name -> eval.FunDefList
	26, // 21: eval.EvaluateFunCallInput.fun_call:type_name -> ast.FunCall
	0,  // 22: eval.EvaluateFunCallInput.defs:type_name -> eval.FunDefList
	27, // 23: eval.EvaluateCaseBranchesInput.case_branches:type_name -> ast.CaseBranches
	0,  // 24: eval.EvaluateCaseBranchesInput.defs:type_name -> eval.FunDefList
	28, // 25: eval.EvaluateOpUnaryInput.op_unary:type_name -> ast.OpUnary
	0,  // 26: eval.EvaluateOpUnaryInput.defs:type_name -> eval.FunDefList
	29, // 27: eval.EvaluateOpBinaryInput.op_binary:type_name -> ast.OpBinary
	0,  // 28: eval.EvaluateOpBinaryInput.defs:type_name -> eval.FunDefList
	30, // 29: eval.EvaluateOpVariadicInput.op_variadic:type_name -> ast.OpVariadic
	0,  // 30: eval.EvaluateOpVariadicInput.defs:type_name -> eval.FunDefList
	1,  // 31: eval.Evaluator.Evaluate:input_type -> eval.EvaluateInput
	3,  // 32: eval.Evaluator.EvaluateExpr:input_type -> eval.EvaluateExprInput
	4,  // 33: eval.Evaluator.EvaluateEval:input_type -> eval.EvaluateEvalInput
	5,  // 34: eval.Evaluator.EvaluateScalar:input_type -> eval.EvaluateScalarInput
	6,  // 35: eval.Evaluator.EvaluateNewObj:input_type -> eval.EvaluateNewObjInput
	7,  // 36: eval.Evaluator.EvaluateNewArr:input_type -> eval.EvaluateNewArrInput
	8,  // 37: eval.Evaluator.EvaluateValJson:input_type -> eval.EvaluateValJsonInput
	9,  // 38: eval.Evaluator.EvaluateRangeIter:input_type -> eval.EvaluateRangeIterInput
	10, // 39: eval.Evaluator.EvaluateElemAccess:input_type -> eval.EvaluateElemAccessInput
	11, // 40: eval.Evaluator.EvaluateFunCall:input_type -> eval.EvaluateFunCallInput
	12, // 41: eval.Evaluator.EvaluateCaseBranches:input_type -> eval.EvaluateCaseBranchesInput
	13, // 42: eval.Evaluator.EvaluateOpUnary:input_type -> eval.EvaluateOpUnaryInput
	14, // 43: eval.Evaluator.EvaluateOpBinary:input_type -> eval.EvaluateOpBinaryInput
	15, // 44: eval.Evaluator.EvaluateOpVariadic:input_type -> eval.EvaluateOpVariadicInput
	2,  // 45: eval.Evaluator.Evaluate:output_type -> eval.EvaluateOutput
	2,  // 46: eval.Evaluator.EvaluateExpr:output_type -> eval.EvaluateOutput
	2,  // 47: eval.Evaluator.EvaluateEval:output_type -> eval.EvaluateOutput
	2,  // 48: eval.Evaluator.EvaluateScalar:output_type -> eval.EvaluateOutput
	2,  // 49: eval.Evaluator.EvaluateNewObj:output_type -> eval.EvaluateOutput
	2,  // 50: eval.Evaluator.EvaluateNewArr:output_type -> eval.EvaluateOutput
	2,  // 51: eval.Evaluator.EvaluateValJson:output_type -> eval.EvaluateOutput
	2,  // 52: eval.Evaluator.EvaluateRangeIter:output_type -> eval.EvaluateOutput
	2,  // 53: eval.Evaluator.EvaluateElemAccess:output_type -> eval.EvaluateOutput
	2,  // 54: eval.Evaluator.EvaluateFunCall:output_type -> eval.EvaluateOutput
	2,  // 55: eval.Evaluator.EvaluateCaseBranches:output_type -> eval.EvaluateOutput
	2,  // 56: eval.Evaluator.EvaluateOpUnary:output_type -> eval.EvaluateOutput
	2,  // 57: eval.Evaluator.EvaluateOpBinary:output_type -> eval.EvaluateOutput
	2,  // 58: eval.Evaluator.EvaluateOpVariadic:output_type -> eval.EvaluateOutput
	45, // [45:59] is the sub-list for method output_type
	31, // [31:45] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_eval_evaluator_proto_init() }
func file_eval_evaluator_proto_init() {
	if File_eval_evaluator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eval_evaluator_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*FunDefList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateExprInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateEvalInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateScalarInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateNewObjInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateNewArrInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateValJsonInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateRangeIterInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateElemAccessInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateFunCallInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateCaseBranchesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateOpUnaryInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateOpBinaryInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateOpVariadicInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eval_evaluator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eval_evaluator_proto_goTypes,
		DependencyIndexes: file_eval_evaluator_proto_depIdxs,
		MessageInfos:      file_eval_evaluator_proto_msgTypes,
	}.Build()
	File_eval_evaluator_proto = out.File
	file_eval_evaluator_proto_rawDesc = nil
	file_eval_evaluator_proto_goTypes = nil
	file_eval_evaluator_proto_depIdxs = nil
}
