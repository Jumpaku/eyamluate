// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: eval/evaluator.proto

package eval

import (
	ast "github.com/Jumpaku/eyamlate/golang/ast"
	yaml "github.com/Jumpaku/eyamlate/golang/yaml"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EvaluateOutput_Status int32

const (
	EvaluateOutput_OK                          EvaluateOutput_Status = 0
	EvaluateOutput_UNSUPPORTED_EXPR_ERROR      EvaluateOutput_Status = 1
	EvaluateOutput_UNEXPECTED_TYPE_ERROR       EvaluateOutput_Status = 2
	EvaluateOutput_ARITHMETIC_ERROR            EvaluateOutput_Status = 3
	EvaluateOutput_INDEX_OUT_OF_BOUNDS_ERROR   EvaluateOutput_Status = 4
	EvaluateOutput_KEY_NOT_FOUND_ERROR         EvaluateOutput_Status = 5
	EvaluateOutput_REFERENCE_NOT_FOUND_ERROR   EvaluateOutput_Status = 6
	EvaluateOutput_CASES_NOT_EXHAUSTIVE_ERROR  EvaluateOutput_Status = 7
	EvaluateOutput_UNSUPPORTED_OPERATION_ERROR EvaluateOutput_Status = 8
	EvaluateOutput_ABORT_ERROR                 EvaluateOutput_Status = 9
)

// Enum value maps for EvaluateOutput_Status.
var (
	EvaluateOutput_Status_name = map[int32]string{
		0: "OK",
		1: "UNSUPPORTED_EXPR_ERROR",
		2: "UNEXPECTED_TYPE_ERROR",
		3: "ARITHMETIC_ERROR",
		4: "INDEX_OUT_OF_BOUNDS_ERROR",
		5: "KEY_NOT_FOUND_ERROR",
		6: "REFERENCE_NOT_FOUND_ERROR",
		7: "CASES_NOT_EXHAUSTIVE_ERROR",
		8: "UNSUPPORTED_OPERATION_ERROR",
		9: "ABORT_ERROR",
	}
	EvaluateOutput_Status_value = map[string]int32{
		"OK":                          0,
		"UNSUPPORTED_EXPR_ERROR":      1,
		"UNEXPECTED_TYPE_ERROR":       2,
		"ARITHMETIC_ERROR":            3,
		"INDEX_OUT_OF_BOUNDS_ERROR":   4,
		"KEY_NOT_FOUND_ERROR":         5,
		"REFERENCE_NOT_FOUND_ERROR":   6,
		"CASES_NOT_EXHAUSTIVE_ERROR":  7,
		"UNSUPPORTED_OPERATION_ERROR": 8,
		"ABORT_ERROR":                 9,
	}
)

func (x EvaluateOutput_Status) Enum() *EvaluateOutput_Status {
	p := new(EvaluateOutput_Status)
	*p = x
	return p
}

func (x EvaluateOutput_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvaluateOutput_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_eval_evaluator_proto_enumTypes[0].Descriptor()
}

func (EvaluateOutput_Status) Type() protoreflect.EnumType {
	return &file_eval_evaluator_proto_enumTypes[0]
}

func (x EvaluateOutput_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvaluateOutput_Status.Descriptor instead.
func (EvaluateOutput_Status) EnumDescriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{2, 0}
}

type FunDefList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent *FunDefList `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Def    *ast.FunDef `protobuf:"bytes,2,opt,name=def,proto3" json:"def,omitempty"`
}

func (x *FunDefList) Reset() {
	*x = FunDefList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunDefList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunDefList) ProtoMessage() {}

func (x *FunDefList) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunDefList.ProtoReflect.Descriptor instead.
func (*FunDefList) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{0}
}

func (x *FunDefList) GetParent() *FunDefList {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *FunDefList) GetDef() *ast.FunDef {
	if x != nil {
		return x.Def
	}
	return nil
}

type EvaluateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Defs *FunDefList `protobuf:"bytes,1,opt,name=defs,proto3" json:"defs,omitempty"`
	Expr *ast.Expr   `protobuf:"bytes,2,opt,name=expr,proto3" json:"expr,omitempty"`
}

func (x *EvaluateInput) Reset() {
	*x = EvaluateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateInput) ProtoMessage() {}

func (x *EvaluateInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateInput.ProtoReflect.Descriptor instead.
func (*EvaluateInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{1}
}

func (x *EvaluateInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

func (x *EvaluateInput) GetExpr() *ast.Expr {
	if x != nil {
		return x.Expr
	}
	return nil
}

type EvaluateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       EvaluateOutput_Status `protobuf:"varint,1,opt,name=status,proto3,enum=eval.EvaluateOutput_Status" json:"status,omitempty"`
	ErrorMessage string                `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ErrorPath    *ast.Path             `protobuf:"bytes,3,opt,name=error_path,json=errorPath,proto3" json:"error_path,omitempty"`
	Value        *yaml.Value           `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EvaluateOutput) Reset() {
	*x = EvaluateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateOutput) ProtoMessage() {}

func (x *EvaluateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateOutput.ProtoReflect.Descriptor instead.
func (*EvaluateOutput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{2}
}

func (x *EvaluateOutput) GetStatus() EvaluateOutput_Status {
	if x != nil {
		return x.Status
	}
	return EvaluateOutput_OK
}

func (x *EvaluateOutput) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *EvaluateOutput) GetErrorPath() *ast.Path {
	if x != nil {
		return x.ErrorPath
	}
	return nil
}

func (x *EvaluateOutput) GetValue() *yaml.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type EvaluateExprInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expr *ast.Expr   `protobuf:"bytes,1,opt,name=expr,proto3" json:"expr,omitempty"`
	Defs *FunDefList `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
}

func (x *EvaluateExprInput) Reset() {
	*x = EvaluateExprInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateExprInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateExprInput) ProtoMessage() {}

func (x *EvaluateExprInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateExprInput.ProtoReflect.Descriptor instead.
func (*EvaluateExprInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{3}
}

func (x *EvaluateExprInput) GetExpr() *ast.Expr {
	if x != nil {
		return x.Expr
	}
	return nil
}

func (x *EvaluateExprInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

type EvaluateEvalInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eval *ast.Eval   `protobuf:"bytes,1,opt,name=eval,proto3" json:"eval,omitempty"`
	Defs *FunDefList `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
}

func (x *EvaluateEvalInput) Reset() {
	*x = EvaluateEvalInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateEvalInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateEvalInput) ProtoMessage() {}

func (x *EvaluateEvalInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateEvalInput.ProtoReflect.Descriptor instead.
func (*EvaluateEvalInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{4}
}

func (x *EvaluateEvalInput) GetEval() *ast.Eval {
	if x != nil {
		return x.Eval
	}
	return nil
}

func (x *EvaluateEvalInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

type EvaluateScalarInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scalar *ast.Scalar `protobuf:"bytes,1,opt,name=scalar,proto3" json:"scalar,omitempty"`
	Defs   *FunDefList `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
	Path   *ast.Path   `protobuf:"bytes,10,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *EvaluateScalarInput) Reset() {
	*x = EvaluateScalarInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateScalarInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateScalarInput) ProtoMessage() {}

func (x *EvaluateScalarInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateScalarInput.ProtoReflect.Descriptor instead.
func (*EvaluateScalarInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{5}
}

func (x *EvaluateScalarInput) GetScalar() *ast.Scalar {
	if x != nil {
		return x.Scalar
	}
	return nil
}

func (x *EvaluateScalarInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

func (x *EvaluateScalarInput) GetPath() *ast.Path {
	if x != nil {
		return x.Path
	}
	return nil
}

type EvaluateObjInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Obj  *ast.Obj    `protobuf:"bytes,1,opt,name=obj,proto3" json:"obj,omitempty"`
	Defs *FunDefList `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
	Path *ast.Path   `protobuf:"bytes,10,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *EvaluateObjInput) Reset() {
	*x = EvaluateObjInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateObjInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateObjInput) ProtoMessage() {}

func (x *EvaluateObjInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateObjInput.ProtoReflect.Descriptor instead.
func (*EvaluateObjInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{6}
}

func (x *EvaluateObjInput) GetObj() *ast.Obj {
	if x != nil {
		return x.Obj
	}
	return nil
}

func (x *EvaluateObjInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

func (x *EvaluateObjInput) GetPath() *ast.Path {
	if x != nil {
		return x.Path
	}
	return nil
}

type EvaluateArrInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arr  *ast.Arr    `protobuf:"bytes,1,opt,name=arr,proto3" json:"arr,omitempty"`
	Defs *FunDefList `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
	Path *ast.Path   `protobuf:"bytes,10,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *EvaluateArrInput) Reset() {
	*x = EvaluateArrInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateArrInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateArrInput) ProtoMessage() {}

func (x *EvaluateArrInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateArrInput.ProtoReflect.Descriptor instead.
func (*EvaluateArrInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{7}
}

func (x *EvaluateArrInput) GetArr() *ast.Arr {
	if x != nil {
		return x.Arr
	}
	return nil
}

func (x *EvaluateArrInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

func (x *EvaluateArrInput) GetPath() *ast.Path {
	if x != nil {
		return x.Path
	}
	return nil
}

type EvaluateJsonInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Json *ast.Json   `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
	Defs *FunDefList `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
	Path *ast.Path   `protobuf:"bytes,10,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *EvaluateJsonInput) Reset() {
	*x = EvaluateJsonInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateJsonInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateJsonInput) ProtoMessage() {}

func (x *EvaluateJsonInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateJsonInput.ProtoReflect.Descriptor instead.
func (*EvaluateJsonInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{8}
}

func (x *EvaluateJsonInput) GetJson() *ast.Json {
	if x != nil {
		return x.Json
	}
	return nil
}

func (x *EvaluateJsonInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

func (x *EvaluateJsonInput) GetPath() *ast.Path {
	if x != nil {
		return x.Path
	}
	return nil
}

type EvaluateRangeIterInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RangeIter *ast.RangeIter `protobuf:"bytes,1,opt,name=range_iter,json=rangeIter,proto3" json:"range_iter,omitempty"`
	Defs      *FunDefList    `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
	Path      *ast.Path      `protobuf:"bytes,10,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *EvaluateRangeIterInput) Reset() {
	*x = EvaluateRangeIterInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateRangeIterInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateRangeIterInput) ProtoMessage() {}

func (x *EvaluateRangeIterInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateRangeIterInput.ProtoReflect.Descriptor instead.
func (*EvaluateRangeIterInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{9}
}

func (x *EvaluateRangeIterInput) GetRangeIter() *ast.RangeIter {
	if x != nil {
		return x.RangeIter
	}
	return nil
}

func (x *EvaluateRangeIterInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

func (x *EvaluateRangeIterInput) GetPath() *ast.Path {
	if x != nil {
		return x.Path
	}
	return nil
}

type EvaluateGetElemInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetElem *ast.GetElem `protobuf:"bytes,1,opt,name=get_elem,json=getElem,proto3" json:"get_elem,omitempty"`
	Defs    *FunDefList  `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
	Path    *ast.Path    `protobuf:"bytes,10,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *EvaluateGetElemInput) Reset() {
	*x = EvaluateGetElemInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateGetElemInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateGetElemInput) ProtoMessage() {}

func (x *EvaluateGetElemInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateGetElemInput.ProtoReflect.Descriptor instead.
func (*EvaluateGetElemInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{10}
}

func (x *EvaluateGetElemInput) GetGetElem() *ast.GetElem {
	if x != nil {
		return x.GetElem
	}
	return nil
}

func (x *EvaluateGetElemInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

func (x *EvaluateGetElemInput) GetPath() *ast.Path {
	if x != nil {
		return x.Path
	}
	return nil
}

type EvaluateFunCallInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FunCall *ast.FunCall `protobuf:"bytes,1,opt,name=fun_call,json=funCall,proto3" json:"fun_call,omitempty"`
	Defs    *FunDefList  `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
	Path    *ast.Path    `protobuf:"bytes,10,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *EvaluateFunCallInput) Reset() {
	*x = EvaluateFunCallInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateFunCallInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateFunCallInput) ProtoMessage() {}

func (x *EvaluateFunCallInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateFunCallInput.ProtoReflect.Descriptor instead.
func (*EvaluateFunCallInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{11}
}

func (x *EvaluateFunCallInput) GetFunCall() *ast.FunCall {
	if x != nil {
		return x.FunCall
	}
	return nil
}

func (x *EvaluateFunCallInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

func (x *EvaluateFunCallInput) GetPath() *ast.Path {
	if x != nil {
		return x.Path
	}
	return nil
}

type EvaluateCasesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cases *ast.Cases  `protobuf:"bytes,1,opt,name=cases,proto3" json:"cases,omitempty"`
	Defs  *FunDefList `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
	Path  *ast.Path   `protobuf:"bytes,10,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *EvaluateCasesInput) Reset() {
	*x = EvaluateCasesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateCasesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateCasesInput) ProtoMessage() {}

func (x *EvaluateCasesInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateCasesInput.ProtoReflect.Descriptor instead.
func (*EvaluateCasesInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{12}
}

func (x *EvaluateCasesInput) GetCases() *ast.Cases {
	if x != nil {
		return x.Cases
	}
	return nil
}

func (x *EvaluateCasesInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

func (x *EvaluateCasesInput) GetPath() *ast.Path {
	if x != nil {
		return x.Path
	}
	return nil
}

type EvaluateOpUnaryInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpUnary *ast.OpUnary `protobuf:"bytes,1,opt,name=op_unary,json=opUnary,proto3" json:"op_unary,omitempty"`
	Defs    *FunDefList  `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
	Path    *ast.Path    `protobuf:"bytes,10,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *EvaluateOpUnaryInput) Reset() {
	*x = EvaluateOpUnaryInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateOpUnaryInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateOpUnaryInput) ProtoMessage() {}

func (x *EvaluateOpUnaryInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateOpUnaryInput.ProtoReflect.Descriptor instead.
func (*EvaluateOpUnaryInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{13}
}

func (x *EvaluateOpUnaryInput) GetOpUnary() *ast.OpUnary {
	if x != nil {
		return x.OpUnary
	}
	return nil
}

func (x *EvaluateOpUnaryInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

func (x *EvaluateOpUnaryInput) GetPath() *ast.Path {
	if x != nil {
		return x.Path
	}
	return nil
}

type EvaluateOpBinaryInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpBinary *ast.OpBinary `protobuf:"bytes,1,opt,name=op_binary,json=opBinary,proto3" json:"op_binary,omitempty"`
	Defs     *FunDefList   `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
	Path     *ast.Path     `protobuf:"bytes,10,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *EvaluateOpBinaryInput) Reset() {
	*x = EvaluateOpBinaryInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateOpBinaryInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateOpBinaryInput) ProtoMessage() {}

func (x *EvaluateOpBinaryInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateOpBinaryInput.ProtoReflect.Descriptor instead.
func (*EvaluateOpBinaryInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{14}
}

func (x *EvaluateOpBinaryInput) GetOpBinary() *ast.OpBinary {
	if x != nil {
		return x.OpBinary
	}
	return nil
}

func (x *EvaluateOpBinaryInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

func (x *EvaluateOpBinaryInput) GetPath() *ast.Path {
	if x != nil {
		return x.Path
	}
	return nil
}

type EvaluateOpVariadicInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpVariadic *ast.OpVariadic `protobuf:"bytes,1,opt,name=op_variadic,json=opVariadic,proto3" json:"op_variadic,omitempty"`
	Defs       *FunDefList     `protobuf:"bytes,2,opt,name=defs,proto3" json:"defs,omitempty"`
	Path       *ast.Path       `protobuf:"bytes,10,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *EvaluateOpVariadicInput) Reset() {
	*x = EvaluateOpVariadicInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eval_evaluator_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateOpVariadicInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateOpVariadicInput) ProtoMessage() {}

func (x *EvaluateOpVariadicInput) ProtoReflect() protoreflect.Message {
	mi := &file_eval_evaluator_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateOpVariadicInput.ProtoReflect.Descriptor instead.
func (*EvaluateOpVariadicInput) Descriptor() ([]byte, []int) {
	return file_eval_evaluator_proto_rawDescGZIP(), []int{15}
}

func (x *EvaluateOpVariadicInput) GetOpVariadic() *ast.OpVariadic {
	if x != nil {
		return x.OpVariadic
	}
	return nil
}

func (x *EvaluateOpVariadicInput) GetDefs() *FunDefList {
	if x != nil {
		return x.Defs
	}
	return nil
}

func (x *EvaluateOpVariadicInput) GetPath() *ast.Path {
	if x != nil {
		return x.Path
	}
	return nil
}

var File_eval_evaluator_proto protoreflect.FileDescriptor

var file_eval_evaluator_proto_rawDesc = []byte{
	0x0a, 0x14, 0x65, 0x76, 0x61, 0x6c, 0x2f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x65, 0x76, 0x61, 0x6c, 0x1a, 0x10, 0x61, 0x73,
	0x74, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10,
	0x79, 0x61, 0x6d, 0x6c, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x55, 0x0a, 0x0a, 0x46, 0x75, 0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x03, 0x64, 0x65, 0x66, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x44,
	0x65, 0x66, 0x52, 0x03, 0x64, 0x65, 0x66, 0x22, 0x54, 0x0a, 0x0d, 0x45, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75,
	0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x65, 0x66, 0x73, 0x12, 0x1d,
	0x0a, 0x04, 0x65, 0x78, 0x70, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61,
	0x73, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x52, 0x04, 0x65, 0x78, 0x70, 0x72, 0x22, 0xc0, 0x03,
	0x0a, 0x0e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x61, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x79, 0x61, 0x6d, 0x6c, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x86, 0x02, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x4e,
	0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x45, 0x58, 0x50, 0x52, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x4e, 0x45, 0x58, 0x50, 0x45,
	0x43, 0x54, 0x45, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x02, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x52, 0x49, 0x54, 0x48, 0x4d, 0x45, 0x54, 0x49, 0x43, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x49, 0x4e, 0x44, 0x45, 0x58,
	0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x53, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x4b, 0x45, 0x59, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x12,
	0x1d, 0x0a, 0x19, 0x52, 0x45, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x06, 0x12, 0x1e,
	0x0a, 0x1a, 0x43, 0x41, 0x53, 0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x48, 0x41,
	0x55, 0x53, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x07, 0x12, 0x1f,
	0x0a, 0x1b, 0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x4f, 0x50,
	0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x08, 0x12,
	0x0f, 0x0a, 0x0b, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x09,
	0x22, 0x58, 0x0a, 0x11, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x72,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x04, 0x65, 0x78, 0x70, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x52, 0x04,
	0x65, 0x78, 0x70, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x44, 0x65, 0x66,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x65, 0x66, 0x73, 0x22, 0x58, 0x0a, 0x11, 0x45, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x45, 0x76, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x1d, 0x0a, 0x04, 0x65, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x61, 0x73, 0x74, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x52, 0x04, 0x65, 0x76, 0x61, 0x6c, 0x12, 0x24,
	0x0a, 0x04, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65,
	0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04,
	0x64, 0x65, 0x66, 0x73, 0x22, 0x7f, 0x0a, 0x13, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65,
	0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x73,
	0x63, 0x61, 0x6c, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x73,
	0x74, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x52, 0x06, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72,
	0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x04, 0x64, 0x65, 0x66, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x73, 0x0a, 0x10, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x65, 0x4f, 0x62, 0x6a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x03, 0x6f, 0x62, 0x6a,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x4f, 0x62, 0x6a,
	0x52, 0x03, 0x6f, 0x62, 0x6a, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x44, 0x65,
	0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x65, 0x66, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x73, 0x74, 0x2e,
	0x50, 0x61, 0x74, 0x68, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x73, 0x0a, 0x10, 0x45, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x41, 0x72, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1a,
	0x0a, 0x03, 0x61, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x61, 0x73,
	0x74, 0x2e, 0x41, 0x72, 0x72, 0x52, 0x03, 0x61, 0x72, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65,
	0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e,
	0x46, 0x75, 0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x65, 0x66, 0x73,
	0x12, 0x1d, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x61, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22,
	0x77, 0x0a, 0x11, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x04, 0x6a,
	0x73, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x44, 0x65, 0x66, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x65, 0x66, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x50, 0x61,
	0x74, 0x68, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x8c, 0x01, 0x0a, 0x16, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x2d, 0x0a, 0x0a, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x72, 0x52, 0x09, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74,
	0x65, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x04, 0x64, 0x65, 0x66, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x74,
	0x68, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x84, 0x01, 0x0a, 0x14, 0x45, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x65, 0x47, 0x65, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x27, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6c, 0x65, 0x6d,
	0x52, 0x07, 0x67, 0x65, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x66,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46,
	0x75, 0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x65, 0x66, 0x73, 0x12,
	0x1d, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x61, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x84,
	0x01, 0x0a, 0x14, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x46, 0x75, 0x6e, 0x43, 0x61,
	0x6c, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x5f, 0x63,
	0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x73, 0x74, 0x2e,
	0x46, 0x75, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x07, 0x66, 0x75, 0x6e, 0x43, 0x61, 0x6c, 0x6c,
	0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x04, 0x64, 0x65, 0x66, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x7b, 0x0a, 0x12, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x73, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x63,
	0x61, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x73, 0x74,
	0x2e, 0x43, 0x61, 0x73, 0x65, 0x73, 0x52, 0x05, 0x63, 0x61, 0x73, 0x65, 0x73, 0x12, 0x24, 0x0a,
	0x04, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76,
	0x61, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64,
	0x65, 0x66, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x22, 0x84, 0x01, 0x0a, 0x14, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f,
	0x70, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x6f,
	0x70, 0x5f, 0x75, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x61, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x07, 0x6f, 0x70, 0x55,
	0x6e, 0x61, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x44, 0x65, 0x66,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x65, 0x66, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x88, 0x01, 0x0a, 0x15, 0x45, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x09, 0x6f, 0x70, 0x5f, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x42,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x08, 0x6f, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12,
	0x24, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x04, 0x64, 0x65, 0x66, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x22, 0x90, 0x01, 0x0a, 0x17, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x65, 0x4f, 0x70, 0x56, 0x61, 0x72, 0x69, 0x61, 0x64, 0x69, 0x63, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x30, 0x0a, 0x0b, 0x6f, 0x70, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x64, 0x69, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x64, 0x69, 0x63, 0x52, 0x0a, 0x6f, 0x70, 0x56, 0x61, 0x72, 0x69, 0x61, 0x64,
	0x69, 0x63, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x44, 0x65, 0x66, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x04, 0x64, 0x65, 0x66, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x74,
	0x68, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x32, 0xc3, 0x07, 0x0a, 0x09, 0x45, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x37, 0x0a, 0x08, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x65, 0x12, 0x13, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x3f,
	0x0a, 0x0c, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x72, 0x12, 0x17,
	0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x70, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12,
	0x3f, 0x0a, 0x0c, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x45, 0x76, 0x61, 0x6c, 0x12,
	0x17, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x45,
	0x76, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00,
	0x12, 0x43, 0x0a, 0x0e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x53, 0x63, 0x61, 0x6c,
	0x61, 0x72, 0x12, 0x19, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e,
	0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0b, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x65, 0x4f, 0x62, 0x6a, 0x12, 0x16, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x65,
	0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0b, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65,
	0x41, 0x72, 0x72, 0x12, 0x16, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x65, 0x41, 0x72, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x76,
	0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0c, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4a,
	0x73, 0x6f, 0x6e, 0x12, 0x17, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x65,
	0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x11, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x65, 0x76, 0x61, 0x6c,
	0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74,
	0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12,
	0x45, 0x0a, 0x0f, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x47, 0x65, 0x74, 0x45, 0x6c,
	0x65, 0x6d, 0x12, 0x1a, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x65, 0x47, 0x65, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14,
	0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0f, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x65, 0x46, 0x75, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x1a, 0x2e, 0x65, 0x76, 0x61, 0x6c,
	0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x46, 0x75, 0x6e, 0x43, 0x61, 0x6c, 0x6c,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x41, 0x0a,
	0x0d, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x43, 0x61, 0x73, 0x65, 0x73, 0x12, 0x18,
	0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x73, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00,
	0x12, 0x45, 0x0a, 0x0f, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x55, 0x6e,
	0x61, 0x72, 0x79, 0x12, 0x1a, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x65, 0x4f, 0x70, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x14, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x10, 0x45, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x65, 0x4f, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x1b, 0x2e, 0x65, 0x76,
	0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x42, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00,
	0x12, 0x4b, 0x0a, 0x12, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x64, 0x69, 0x63, 0x12, 0x1d, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x56, 0x61, 0x72, 0x69, 0x61, 0x64, 0x69, 0x63,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x42, 0x29, 0x5a,
	0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4a, 0x75, 0x6d, 0x70,
	0x61, 0x6b, 0x75, 0x2f, 0x65, 0x79, 0x61, 0x6d, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x67, 0x6f, 0x6c,
	0x61, 0x6e, 0x67, 0x2f, 0x65, 0x76, 0x61, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eval_evaluator_proto_rawDescOnce sync.Once
	file_eval_evaluator_proto_rawDescData = file_eval_evaluator_proto_rawDesc
)

func file_eval_evaluator_proto_rawDescGZIP() []byte {
	file_eval_evaluator_proto_rawDescOnce.Do(func() {
		file_eval_evaluator_proto_rawDescData = protoimpl.X.CompressGZIP(file_eval_evaluator_proto_rawDescData)
	})
	return file_eval_evaluator_proto_rawDescData
}

var file_eval_evaluator_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_eval_evaluator_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_eval_evaluator_proto_goTypes = []any{
	(EvaluateOutput_Status)(0),      // 0: eval.EvaluateOutput.Status
	(*FunDefList)(nil),              // 1: eval.FunDefList
	(*EvaluateInput)(nil),           // 2: eval.EvaluateInput
	(*EvaluateOutput)(nil),          // 3: eval.EvaluateOutput
	(*EvaluateExprInput)(nil),       // 4: eval.EvaluateExprInput
	(*EvaluateEvalInput)(nil),       // 5: eval.EvaluateEvalInput
	(*EvaluateScalarInput)(nil),     // 6: eval.EvaluateScalarInput
	(*EvaluateObjInput)(nil),        // 7: eval.EvaluateObjInput
	(*EvaluateArrInput)(nil),        // 8: eval.EvaluateArrInput
	(*EvaluateJsonInput)(nil),       // 9: eval.EvaluateJsonInput
	(*EvaluateRangeIterInput)(nil),  // 10: eval.EvaluateRangeIterInput
	(*EvaluateGetElemInput)(nil),    // 11: eval.EvaluateGetElemInput
	(*EvaluateFunCallInput)(nil),    // 12: eval.EvaluateFunCallInput
	(*EvaluateCasesInput)(nil),      // 13: eval.EvaluateCasesInput
	(*EvaluateOpUnaryInput)(nil),    // 14: eval.EvaluateOpUnaryInput
	(*EvaluateOpBinaryInput)(nil),   // 15: eval.EvaluateOpBinaryInput
	(*EvaluateOpVariadicInput)(nil), // 16: eval.EvaluateOpVariadicInput
	(*ast.FunDef)(nil),              // 17: ast.FunDef
	(*ast.Expr)(nil),                // 18: ast.Expr
	(*ast.Path)(nil),                // 19: ast.Path
	(*yaml.Value)(nil),              // 20: yaml.Value
	(*ast.Eval)(nil),                // 21: ast.Eval
	(*ast.Scalar)(nil),              // 22: ast.Scalar
	(*ast.Obj)(nil),                 // 23: ast.Obj
	(*ast.Arr)(nil),                 // 24: ast.Arr
	(*ast.Json)(nil),                // 25: ast.Json
	(*ast.RangeIter)(nil),           // 26: ast.RangeIter
	(*ast.GetElem)(nil),             // 27: ast.GetElem
	(*ast.FunCall)(nil),             // 28: ast.FunCall
	(*ast.Cases)(nil),               // 29: ast.Cases
	(*ast.OpUnary)(nil),             // 30: ast.OpUnary
	(*ast.OpBinary)(nil),            // 31: ast.OpBinary
	(*ast.OpVariadic)(nil),          // 32: ast.OpVariadic
}
var file_eval_evaluator_proto_depIdxs = []int32{
	1,  // 0: eval.FunDefList.parent:type_name -> eval.FunDefList
	17, // 1: eval.FunDefList.def:type_name -> ast.FunDef
	1,  // 2: eval.EvaluateInput.defs:type_name -> eval.FunDefList
	18, // 3: eval.EvaluateInput.expr:type_name -> ast.Expr
	0,  // 4: eval.EvaluateOutput.status:type_name -> eval.EvaluateOutput.Status
	19, // 5: eval.EvaluateOutput.error_path:type_name -> ast.Path
	20, // 6: eval.EvaluateOutput.value:type_name -> yaml.Value
	18, // 7: eval.EvaluateExprInput.expr:type_name -> ast.Expr
	1,  // 8: eval.EvaluateExprInput.defs:type_name -> eval.FunDefList
	21, // 9: eval.EvaluateEvalInput.eval:type_name -> ast.Eval
	1,  // 10: eval.EvaluateEvalInput.defs:type_name -> eval.FunDefList
	22, // 11: eval.EvaluateScalarInput.scalar:type_name -> ast.Scalar
	1,  // 12: eval.EvaluateScalarInput.defs:type_name -> eval.FunDefList
	19, // 13: eval.EvaluateScalarInput.path:type_name -> ast.Path
	23, // 14: eval.EvaluateObjInput.obj:type_name -> ast.Obj
	1,  // 15: eval.EvaluateObjInput.defs:type_name -> eval.FunDefList
	19, // 16: eval.EvaluateObjInput.path:type_name -> ast.Path
	24, // 17: eval.EvaluateArrInput.arr:type_name -> ast.Arr
	1,  // 18: eval.EvaluateArrInput.defs:type_name -> eval.FunDefList
	19, // 19: eval.EvaluateArrInput.path:type_name -> ast.Path
	25, // 20: eval.EvaluateJsonInput.json:type_name -> ast.Json
	1,  // 21: eval.EvaluateJsonInput.defs:type_name -> eval.FunDefList
	19, // 22: eval.EvaluateJsonInput.path:type_name -> ast.Path
	26, // 23: eval.EvaluateRangeIterInput.range_iter:type_name -> ast.RangeIter
	1,  // 24: eval.EvaluateRangeIterInput.defs:type_name -> eval.FunDefList
	19, // 25: eval.EvaluateRangeIterInput.path:type_name -> ast.Path
	27, // 26: eval.EvaluateGetElemInput.get_elem:type_name -> ast.GetElem
	1,  // 27: eval.EvaluateGetElemInput.defs:type_name -> eval.FunDefList
	19, // 28: eval.EvaluateGetElemInput.path:type_name -> ast.Path
	28, // 29: eval.EvaluateFunCallInput.fun_call:type_name -> ast.FunCall
	1,  // 30: eval.EvaluateFunCallInput.defs:type_name -> eval.FunDefList
	19, // 31: eval.EvaluateFunCallInput.path:type_name -> ast.Path
	29, // 32: eval.EvaluateCasesInput.cases:type_name -> ast.Cases
	1,  // 33: eval.EvaluateCasesInput.defs:type_name -> eval.FunDefList
	19, // 34: eval.EvaluateCasesInput.path:type_name -> ast.Path
	30, // 35: eval.EvaluateOpUnaryInput.op_unary:type_name -> ast.OpUnary
	1,  // 36: eval.EvaluateOpUnaryInput.defs:type_name -> eval.FunDefList
	19, // 37: eval.EvaluateOpUnaryInput.path:type_name -> ast.Path
	31, // 38: eval.EvaluateOpBinaryInput.op_binary:type_name -> ast.OpBinary
	1,  // 39: eval.EvaluateOpBinaryInput.defs:type_name -> eval.FunDefList
	19, // 40: eval.EvaluateOpBinaryInput.path:type_name -> ast.Path
	32, // 41: eval.EvaluateOpVariadicInput.op_variadic:type_name -> ast.OpVariadic
	1,  // 42: eval.EvaluateOpVariadicInput.defs:type_name -> eval.FunDefList
	19, // 43: eval.EvaluateOpVariadicInput.path:type_name -> ast.Path
	2,  // 44: eval.Evaluator.Evaluate:input_type -> eval.EvaluateInput
	4,  // 45: eval.Evaluator.EvaluateExpr:input_type -> eval.EvaluateExprInput
	5,  // 46: eval.Evaluator.EvaluateEval:input_type -> eval.EvaluateEvalInput
	6,  // 47: eval.Evaluator.EvaluateScalar:input_type -> eval.EvaluateScalarInput
	7,  // 48: eval.Evaluator.EvaluateObj:input_type -> eval.EvaluateObjInput
	8,  // 49: eval.Evaluator.EvaluateArr:input_type -> eval.EvaluateArrInput
	9,  // 50: eval.Evaluator.EvaluateJson:input_type -> eval.EvaluateJsonInput
	10, // 51: eval.Evaluator.EvaluateRangeIter:input_type -> eval.EvaluateRangeIterInput
	11, // 52: eval.Evaluator.EvaluateGetElem:input_type -> eval.EvaluateGetElemInput
	12, // 53: eval.Evaluator.EvaluateFunCall:input_type -> eval.EvaluateFunCallInput
	13, // 54: eval.Evaluator.EvaluateCases:input_type -> eval.EvaluateCasesInput
	14, // 55: eval.Evaluator.EvaluateOpUnary:input_type -> eval.EvaluateOpUnaryInput
	15, // 56: eval.Evaluator.EvaluateOpBinary:input_type -> eval.EvaluateOpBinaryInput
	16, // 57: eval.Evaluator.EvaluateOpVariadic:input_type -> eval.EvaluateOpVariadicInput
	3,  // 58: eval.Evaluator.Evaluate:output_type -> eval.EvaluateOutput
	3,  // 59: eval.Evaluator.EvaluateExpr:output_type -> eval.EvaluateOutput
	3,  // 60: eval.Evaluator.EvaluateEval:output_type -> eval.EvaluateOutput
	3,  // 61: eval.Evaluator.EvaluateScalar:output_type -> eval.EvaluateOutput
	3,  // 62: eval.Evaluator.EvaluateObj:output_type -> eval.EvaluateOutput
	3,  // 63: eval.Evaluator.EvaluateArr:output_type -> eval.EvaluateOutput
	3,  // 64: eval.Evaluator.EvaluateJson:output_type -> eval.EvaluateOutput
	3,  // 65: eval.Evaluator.EvaluateRangeIter:output_type -> eval.EvaluateOutput
	3,  // 66: eval.Evaluator.EvaluateGetElem:output_type -> eval.EvaluateOutput
	3,  // 67: eval.Evaluator.EvaluateFunCall:output_type -> eval.EvaluateOutput
	3,  // 68: eval.Evaluator.EvaluateCases:output_type -> eval.EvaluateOutput
	3,  // 69: eval.Evaluator.EvaluateOpUnary:output_type -> eval.EvaluateOutput
	3,  // 70: eval.Evaluator.EvaluateOpBinary:output_type -> eval.EvaluateOutput
	3,  // 71: eval.Evaluator.EvaluateOpVariadic:output_type -> eval.EvaluateOutput
	58, // [58:72] is the sub-list for method output_type
	44, // [44:58] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_eval_evaluator_proto_init() }
func file_eval_evaluator_proto_init() {
	if File_eval_evaluator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eval_evaluator_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*FunDefList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateExprInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateEvalInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateScalarInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateObjInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateArrInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateJsonInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateRangeIterInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateGetElemInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateFunCallInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateCasesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateOpUnaryInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateOpBinaryInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eval_evaluator_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*EvaluateOpVariadicInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eval_evaluator_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eval_evaluator_proto_goTypes,
		DependencyIndexes: file_eval_evaluator_proto_depIdxs,
		EnumInfos:         file_eval_evaluator_proto_enumTypes,
		MessageInfos:      file_eval_evaluator_proto_msgTypes,
	}.Build()
	File_eval_evaluator_proto = out.File
	file_eval_evaluator_proto_rawDesc = nil
	file_eval_evaluator_proto_goTypes = nil
	file_eval_evaluator_proto_depIdxs = nil
}
